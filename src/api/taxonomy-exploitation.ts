import { jsonToFormData } from 'utils/helpers';
import httpRequest from './http-request';

export const getTaxonomyExploitations = (
  params: TaxonomyManagement.RequestParams,
): Promise<App.ListItem<TaxonomyManagement.TaxonomyExploitation>> =>
  httpRequest.get('/taxonomy-exploitations', { params });

export const updateTaxonomyExploitation = (
  indicatorId: string,
  subIndicatorId: string,
  params: TaxonomyManagement.TaxonomyExploitationParams,
): Promise<TaxonomyManagement.TaxonomyExploitation[]> =>
  httpRequest.put(
    `/taxonomy-exploitations/${indicatorId}/sub-indicators/${subIndicatorId}`,
    params,
  );

export const deleteTaxonomyExploitation = (
  indicatorId: string,
  subIndicatorId: string,
): Promise<TaxonomyManagement.TaxonomyExploitation[]> =>
  httpRequest.delete(
    `/taxonomy-exploitations/${indicatorId}/sub-indicators/${subIndicatorId}`,
  );

export const validateDataTemplate = (
  file: Files.UploadedFileParam,
): Promise<Files.UploadedFileResponse> =>
  httpRequest.post(
    '/taxonomy-exploitations/upload-templates',
    jsonToFormData(file),
    {
      headers: { 'Content-Type': 'multipart/form-data' },
    },
  );

export const importTaxonomyExploitations = (
  fileId: string,
  params: TaxonomyManagement.ImportParams,
): Promise<Files.UploadedFileResponse> =>
  httpRequest.post(
    `/taxonomy-exploitations/upload-templates/${fileId}`,
    params,
  );

export const uploadTaxonomyTranslationTemplate = (
  file: Files.UploadedFileParam,
): Promise<TaxonomyManagement.UploadedFileResponse> =>
  httpRequest.post('/taxonomy-translations', jsonToFormData(file), {
    headers: { 'Content-Type': 'multipart/form-data' },
  });

export const getCategoryIcon = (): Promise<TaxonomyManagement.CategoryIcon[]> =>
  httpRequest.get('/categories/setting-icons');

export const updateCategoryIcon = (
  params: TaxonomyManagement.CategoryIconParams,
): Promise<void> => httpRequest.put('/categories/setting-icons', params);
